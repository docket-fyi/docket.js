/**
 * Docket API
 * Docket API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: development@docket.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DocketJs);
  }
}(this, function(expect, DocketJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DocketJs.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('confirmRegistration', function() {
      it('should call confirmRegistration successfully', function(done) {
        //uncomment below and update the code to test confirmRegistration
        //instance.confirmRegistration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('destroyMyProfile', function() {
      it('should call destroyMyProfile successfully', function(done) {
        //uncomment below and update the code to test destroyMyProfile
        //instance.destroyMyProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('forgotPassword', function() {
      it('should call forgotPassword successfully', function(done) {
        //uncomment below and update the code to test forgotPassword
        //instance.forgotPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMyProfile', function() {
      it('should call getMyProfile successfully', function(done) {
        //uncomment below and update the code to test getMyProfile
        //instance.getMyProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetPassword', function() {
      it('should call resetPassword successfully', function(done) {
        //uncomment below and update the code to test resetPassword
        //instance.resetPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('showMyMembership', function() {
      it('should call showMyMembership successfully', function(done) {
        //uncomment below and update the code to test showMyMembership
        //instance.showMyMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMyMembership', function() {
      it('should call updateMyMembership successfully', function(done) {
        //uncomment below and update the code to test updateMyMembership
        //instance.updateMyMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMyProfile', function() {
      it('should call updateMyProfile successfully', function(done) {
        //uncomment below and update the code to test updateMyProfile
        //instance.updateMyProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
