/**
 * Docket API
 * Docket API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: development@docket.fyi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import ClientError from '../model/ClientError';
import InlineObject4 from '../model/InlineObject4';
import InlineResponse2009 from '../model/InlineResponse2009';
/**
* Sessions service.
* @module api/SessionsApi
* @version 1.0.0
*/

export default class SessionsApi {
  /**
  * Constructs a new SessionsApi. 
  * @alias module:api/SessionsApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }
  /**
   * Create a new session
   * Create a new session and, if valid, returns an authentication token (JWT)
   * @param {module:model/InlineObject4} inlineObject4 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2009} and HTTP response
   */


  createSessionWithHttpInfo(inlineObject4) {
    let postBody = inlineObject4; // verify the required parameter 'inlineObject4' is set

    if (inlineObject4 === undefined || inlineObject4 === null) {
      throw new Error("Missing the required parameter 'inlineObject4' when calling createSession");
    }

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};
    let authNames = [];
    let contentTypes = ['application/vnd.api+json'];
    let accepts = ['application/vnd.api+json'];
    let returnType = InlineResponse2009;
    return this.apiClient.callApi('/sessions', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
  }
  /**
   * Create a new session
   * Create a new session and, if valid, returns an authentication token (JWT)
   * @param {module:model/InlineObject4} inlineObject4 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2009}
   */


  createSession(inlineObject4) {
    return this.createSessionWithHttpInfo(inlineObject4).then(function (response_and_data) {
      return response_and_data.data;
    });
  }

}