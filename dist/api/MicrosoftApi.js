/**
 * Docket API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import InlineResponse2004 from '../model/InlineResponse2004';
import InlineResponse2005 from '../model/InlineResponse2005';
/**
* Microsoft service.
* @module api/MicrosoftApi
* @version 0.1.0
*/

export default class MicrosoftApi {
  /**
  * Constructs a new MicrosoftApi. 
  * @alias module:api/MicrosoftApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }
  /**
   * Get Microsoft OAuth tokens
   * 
   * @param {String} code 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2004} and HTTP response
   */


  getMicrosoftAuthTokensWithHttpInfo(code) {
    let postBody = null; // verify the required parameter 'code' is set

    if (code === undefined || code === null) {
      throw new Error("Missing the required parameter 'code' when calling getMicrosoftAuthTokens");
    }

    let pathParams = {};
    let queryParams = {
      'code': code
    };
    let headerParams = {};
    let formParams = {};
    let authNames = ['bearerAuth'];
    let contentTypes = ['application/json'];
    let accepts = ['application/json'];
    let returnType = InlineResponse2004;
    return this.apiClient.callApi('/microsoft/tokens', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
  }
  /**
   * Get Microsoft OAuth tokens
   * 
   * @param {String} code 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2004}
   */


  getMicrosoftAuthTokens(code) {
    return this.getMicrosoftAuthTokensWithHttpInfo(code);
    /*.then(function(response_and_data) {
      return response_and_data.data;
    });*/
  }
  /**
   * Get Microsoft OAuth URL
   * 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2005} and HTTP response
   */


  getMicrosoftOAuthUrlWithHttpInfo() {
    let postBody = null;
    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};
    let authNames = ['bearerAuth'];
    let contentTypes = ['application/json'];
    let accepts = ['application/json'];
    let returnType = InlineResponse2005;
    return this.apiClient.callApi('/microsoft/oauth-url', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
  }
  /**
   * Get Microsoft OAuth URL
   * 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse2005}
   */


  getMicrosoftOAuthUrl() {
    return this.getMicrosoftOAuthUrlWithHttpInfo();
    /*.then(function(response_and_data) {
      return response_and_data.data;
    });*/
  }

}